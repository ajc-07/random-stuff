javascript:(function(){console.log('üèì start');function getPN(){const h4=document.querySelector('td.omnipong h4')||document.querySelector('h4');return h4?h4.textContent.split(' - ')[0].trim():null;}function pfg(A,B,win){const d=Math.abs(A-B),i=d<=12?0:d<=37?1:d<=62?2:d<=87?3:d<=112?4:d<=137?5:d<=162?6:d<=187?7:d<=212?8:d<=237?9:10,exp=[8,7,6,5,4,3,2,2,1,1,0],up=[8,10,13,16,20,25,30,35,40,45,50];return win?(A>=B?exp[i]:up[i]):(A>=B?-up[i]:-exp[i]);}function computeRatings(cur,games){console.log('--- Pass 1 (cur='+cur+') ---');let p1=0;games.forEach((g,i)=>{const pts=pfg(cur,g.rating,g.win);console.log('Game '+i+': rating='+g.rating+', win='+g.win+', pts='+pts);p1+=pts;});console.log('Total Pass1 points='+p1);let adjusted,final;if(p1<50){adjusted=cur+p1;console.log('Pass1<50 ‚Üí adjusted='+adjusted);final=adjusted;console.log('Final='+final);}else if(p1<75){adjusted=cur+p1;console.log('50‚â§Pass1<75 ‚Üí adjusted='+adjusted);console.log('--- Pass 2 ---');let p2=0;games.forEach((g,i)=>{const pts=pfg(adjusted,g.rating,g.win);console.log('Game '+i+': pts2='+pts);p2+=pts;});console.log('Total Pass2 points='+p2);final=adjusted+p2;console.log('Final='+final);}else{console.log('Pass1‚â•75 ‚Üí Tier 2');const wins=games.filter(g=>g.win).map(g=>g.rating),losses=games.filter(g=>!g.win).map(g=>g.rating),bw=Math.max(...wins),wl=Math.min(...losses),tmp=Math.floor((cur+p1+(bw+wl)/2)/2);adjusted=tmp;console.log('Adjusted (tier2)='+adjusted);console.log('--- Pass 3 ---');let p3=0;games.forEach((g,i)=>{const pts=pfg(adjusted,g.rating,g.win);console.log('Game '+i+': pts3='+pts);p3+=pts;});console.log('Total Pass3 points='+p3);final=adjusted+p3;console.log('Final='+final);}return{adjusted:adjusted,final:final};}function parseGames(){const tbls=document.querySelectorAll('table.omnipong'),games=[];for(const tbl of tbls){let win=null,s=tbl.previousSibling;while(s&&(s.nodeType!==1&&s.nodeType!==3))s=s.previousSibling;const txt=(s.textContent||s.nodeValue||'').toLowerCase();if(txt.includes('wins'))win=true;else if(txt.includes('loss'))win=false;else if(win===null)win=games.length===0;Array.from(tbl.querySelectorAll('tr')).slice(1).forEach(row=>{const c=row.querySelectorAll('td'),a=c[0].querySelector('a'),name=a?a.textContent.trim():c[0].textContent.trim(),id=a?new URL(a.href,location.origin).searchParams.get('p'):'',rating=parseInt(c[2].textContent.trim(),10)||0;games.push({name,id,rating,win});});}return games;}function fetchCR(fullName){return new Promise((res,rej)=>{console.log('Fetch rating for '+fullName);const btn=Array.from(document.querySelectorAll('input[name="Action"]')).find(i=>i.value==='Sort by Rating');if(!btn)return rej('no-button');const m=btn.getAttribute('onclick').match(/open_window\('([^']+)'/);if(!m)return rej('bad-link');const url=new URL(m[1].replace(/&amp;/g,'&'),location.origin).href;console.log('üîó URL:',url);fetch(url).then(r=>{console.log('HTTP status',r.status);if(!r.ok)throw r.status;return r.text();}).then(txt=>{const doc=new DOMParser().parseFromString(txt,'text/html'),rt=Array.from(doc.querySelectorAll('table.omnipong')).find(t=>Array.from(t.querySelectorAll('th')).some(h=>/ratings/i.test(h.textContent)));console.log('Rating table found?',!!rt);if(!rt)return rej('no-table');const parts=fullName.split(/\s+/),first=parts[0],last=parts.slice(1).join(' ').toLowerCase(),rows=Array.from(rt.querySelectorAll('tr')).slice(1);let seed=null;for(const row of rows){const cols=row.querySelectorAll('td'),cell=cols[0].textContent.trim().replace(/^-/,''),[rLast,rFirst]=cell.split(',').map(s=>s.trim());if(rLast.toLowerCase()===last&&rFirst.split(/\s+/)[0].toLowerCase()===first.toLowerCase()){seed=parseInt(cols[3].textContent.trim().split('/')[0].trim(),10);break;}}console.log('Seed extract:',seed);return seed===null?rej('not-found'):res(seed);} ).catch(e=>{console.error('Fetch error',e);rej(e);});});}const name=getPN(),games=parseGames();console.log('Player:',name,'Games:',games.length);if(!name){alert('‚ùå Couldn‚Äôt detect your name on this page');return;}fetchCR(name).then(cur=>{console.log('üèÖ Current seed:',cur);const uniq={},unknowns=[];games.forEach(g=>{if(g.rating===0&&!uniq[g.id]){uniq[g.id]=g;unknowns.push(g);}});console.log('Unknowns:',unknowns.map(o=>o.name+'('+o.id+')'));unknowns.forEach(op=>{const ans=prompt('Opponent '+op.name+' (ID:'+op.id+') has rating=0. Enter estimate:'),e=parseInt(ans,10);if(!isNaN(e))games.forEach(g=>g.id===op.id&&(g.rating=e));});const r=computeRatings(cur,games);alert('Player: '+name+'\nCurrent (seed) Rating: '+cur+'\nAdjusted Rating:      '+r.adjusted+'\nNew Rating:           '+r.final+'\n\n(More details in console)');}).catch(err=>{console.error('‚ùå Lookup failed:',err);alert('Lookup failed: '+err);});})();
